#include <stdio.h>
#include <string.h>
#include <stdarg.h>
#ifdef UNIX
#include <stdint.h>
#include <unistd.h>
#endif
#include "mex.h"

// CUDA
#include "cuda.h"
#include "cuda_runtime.h"
#include "cublas.h"

#include "cudaCommon.h"

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[]) {
  // At least 2 arguments expected
  // Input and result
  if((nlhs != 0) || (nrhs != 1)) { mexErrMsgTxt("Form: GPU_test(GPU tag / GPU_Type / ImogenArray)"); }

  int returnCode = CHECK_CUDA_ERROR("entering GPU_test");
  if(returnCode != SUCCESSFUL) return;
  
  MGArray thetag;
  returnCode = MGA_accessMatlabArrays(prhs, 0, 0, &thetag);
  if(returnCode != SUCCESSFUL) {
	  CHECK_IMOGEN_ERROR(returnCode);
	  return;
  }

  printf("Complete contents of the MGArray structure generated by this tag:\n");
  printf("|-Boundary information\n");
  printf("| |-addExteriorHalo = %i\n", thetag.addExteriorHalo);
  printf("| |-mpiCircularBoundaryBits = %i\n", thetag.mpiCircularBoundaryBits);
  printf("| |-haloSize = %i\n", thetag.haloSize);
  printf("|-External facing parameters\n");
  printf("| |-currentPermutation = [%i %i %i]\n", thetag.currentPermutation[0], thetag.currentPermutation[1], thetag.currentPermutation[2]);
  printf("| |-dim = [%i %i %i]\n", thetag.dim[0], thetag.dim[1], thetag.dim[2]);
  printf("| |-numSlabs = %i\n", thetag.numSlabs);
  printf("| |-numel = %li\n", thetag.numel);
  printf("| |-permtag = %i\n", thetag.permtag);
  printf("|-Internal parameters\n");
  printf("| |-bcExternalDataPtr=%#lx\n", (unsigned long int)(thetag.boundaryConditions.externalData));
  printf("| |-bcExternalIndex=%i\n", thetag.boundaryConditions.extIndex);
  printf("|-Parallel parameters\n");
  printf("| |-This system configured to use max of %i GPUs\n", MAX_GPUS_USED);
  printf("| |-partitionDir = %i\n", thetag.partitionDir);
  printf("| |-nGPUs = %i\n", thetag.nGPUs);
  int pc;
  int sub[6];
  for(pc = 0; pc < thetag.nGPUs; pc++) {
	  printf("| |-partition %i information\n", pc);
	  printf("| | |-deviceID = %i\n", thetag.deviceID[pc]);
	  printf("| | |-devicePtr = %#lx\n", (unsigned long int)thetag.devicePtr[pc]);
	  printf("| | |-partNumel = %i\n", thetag.partNumel[pc]);
	  printf("| | |-slabPitch = %li\n", thetag.slabPitch[pc]);
	  calcPartitionExtent(&thetag, pc, &sub[0]);
	  printf("| | |-calcPartitionExtent returns [%i %i %i %i %i %i]\n", sub[0], sub[1], sub[2], sub[3], sub[4], sub[5]);
  }

  CHECK_IMOGEN_ERROR(returnCode);
  return;
}
